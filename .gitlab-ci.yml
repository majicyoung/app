stages:
  - build
  - deploy

variables:
  DOCKERFILE_PATH: ./dev/v8web
  IMAGE: registry.united-asian.com/verifik8/backend
  IMAGE_DEVELOP: $IMAGE:$CI_BUILD_REF_NAME.develop
  IMAGE_LATEST: $IMAGE:$VERSION
  IMAGE_LOCAL: verifiki8/backend:$CI_PIPELINE_ID
  IMAGE_STAGING: $IMAGE:staging
  IMAGE_TAGGED: $IMAGE:$CI_BUILD_REF_NAME
  TAG: "$VERSION.2"
  VERSION: "1.0"

build:
  after_script:
    - docker rmi -f $IMAGE_LOCAL
  before_script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.united-asian.com
  environment: build
  except:
    - api
    - development
    - master
    - staging
    - tags
  script:
    - docker build -t $IMAGE_LOCAL
      --build-arg build=$CI_PIPELINE_ID
      --build-arg version=$TAG
      -f $DOCKERFILE_PATH/Dockerfile $DOCKERFILE_PATH
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.united-asian.com
  stage: build
  tags:
    - builder
    - verifik8

develop_build:
  after_script:
    - docker rmi -f $IMAGE_LOCAL
    - docker rmi -f $IMAGE_DEVELOP
  before_script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.united-asian.com
  environment: build
  only:
    - "api"
  script:
    - docker build -t $IMAGE_LOCAL
      --build-arg build=$CI_PIPELINE_ID
      --build-arg version=$TAG
      -f $DOCKERFILE_PATH/Dockerfile $DOCKERFILE_PATH
    - docker tag $IMAGE_LOCAL $IMAGE_DEVELOP
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.united-asian.com
    - docker push $IMAGE_DEVELOP
  stage: build
  tags:
    - builder
    - verifik8

develop_deploy:
  before_script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.united-asian.com
  environment:
    name: develop
  only:
    - "api"
  script:
    - cd ~/verifik8
    - docker-compose pull backend_blue
    - docker-compose up -d --no-deps backend_blue
    - docker-compose pull backend_green
    - docker-compose up -d --no-deps backend_green
  stage: deploy
  tags:
    - staging2
  variables:
    GIT_STRATEGY: none

staging_build:
  after_script:
    - docker rmi -f $IMAGE_LOCAL
    - docker rmi -f $IMAGE_STAGING
  before_script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.united-asian.com
  environment: build
  only:
    - "staging"
  script:
    - docker build -t $IMAGE_LOCAL
      --build-arg build=$CI_PIPELINE_ID
      --build-arg version=$TAG
      -f $DOCKERFILE_PATH/Dockerfile $DOCKERFILE_PATH
    - docker tag $IMAGE_LOCAL $IMAGE_STAGING
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.united-asian.com
    - docker push $IMAGE_STAGING
  stage: build
  tags:
    - builder
    - verifik8

develop_deploy:
  before_script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.united-asian.com
  environment:
    name: develop
  only:
    - "api"
  script:
    - cd ~/verifik8
    - docker service update verifik8_backend_blue --detach=false --image=$IMAGE_DEVELOP --with-registry-auth
    - docker service update verifik8_backend_green --detach=false --image=$IMAGE_DEVELOP --with-registry-auth
    - docker service update verifik8_api_blue --detach=false --image=$IMAGE_DEVELOP --with-registry-auth
    - docker service update verifik8_api_green --detach=false --image=$IMAGE_DEVELOP --with-registry-auth
  stage: deploy
  tags:
    - develop
    - uat
  variables:
    GIT_STRATEGY: none

staging_deploy:
  before_script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.united-asian.com
  environment:
    name: staging
  only:
    - "staging"
  script:
    - cd ~/verifik8
    - docker-compose pull backend_blue
    - docker-compose up -d --no-deps backend_blue
    - docker-compose pull backend_green
    - docker-compose up -d --no-deps backend_green
    - docker-compose pull api_blue
    - docker-compose up -d --no-deps api_blue
    - docker-compose pull api_green
    - docker-compose up -d --no-deps api_green
  stage: deploy
  tags:
    - staging
    - verifik8
  variables:
    GIT_STRATEGY: none
